TESTED request

### Index method

GET http://localhost:4000/api/wine_listings

### Successfully creates a wine listing
### Response = 201 Created
### Currently creating without Authorization Bearer and Secret Key
POST http://localhost:4000/api/wine_listings
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNjU5MzM3NjQ4LCJleHAiOjE2NTk0MjQwNDgsImp0aSI6IjVjNzI2NmQ5LTNjOTQtNGUxZS05YTUwLTExY2JiMTk3NjgwZSJ9.dDnbm1E2xouB1f3c-7OzMa7lP1A0sipfI0sina2kkQQ

{
    "brand": "Testing Admin params to create new wines. This is expected to succeed",
    "grape_variety": "Pinot Noir",
    "year": "2020",
    "category": "Red",
    "country": "Australia",
    "region": "Geelong",
    "description": "Great deep colour, and sweet spice aromas, with a much firmer palate than we see in the Sangreal. These wines have a perfect fade from fruit to structure, a velvet like character, really complex texture. Itâ€™s darker, firmer edged and more upright. You can taste a fresher fruit note, black cherries and plums and a sense of fine oak. Really impressive."
}

### Testing for regular users trying to create wine listing when not allowed because regular user does not have same rights as admin users
POST http://localhost:4000/api/wine_listings
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY1OTMzNzgyNywiZXhwIjoxNjU5NDI0MjI3LCJqdGkiOiJiNjdiZTAzMi1lZmE3LTRhYzctYTQzNy00Yzk1NmI2ZGM5ZDcifQ.2xS342HCJfwLpTHp_I8FLaOQqIJLRw_7TXoG3tZ3kfc

{
    "brand": "Testing for regular using trying to create wine listing when not allowed because regular user does not have same rights as admin users. This should fail",
    "grape_variety": "Pinot Noir",
    "year": "2020",
    "category": "Red",
    "country": "Australia",
    "region": "Geelong",
    "description": "description for testing purposes only."
}

### Unsuccessfully posts a wine_listing.
### Not providing Authorization bearer
### Not providing all details required.
### Response = 422 Unprocessable Entity
POST http://localhost:4000/api/wine_listings
Content-Type: application/json

{
    "brand": ""
}

### show wine_listing id: 2
GET http://localhost:4000/api/wine_listings/2

### unsuccessfully show wine_listings id: 1000
### Response = 404 Not Found
GET http://localhost:4000/api/wine_listings/1000

### Succesfully update wine_listing id: 6
### Response = 200 OK , provided all fields are given with valid entries.
### Currently works without Authorization: Bearer IXtQvVtEdHw0LVZ3ajJxYZmM2lxH5poEx5ehvz+I9zZXt16j8bsAa+iBGDfsmg4a91O3xHFB5Csr3/56wo8VWGwHpHM8G+nGjkPVE5L9a/z/k9yLuJVFzX+DWk5eocxF+O21oGwZHRpX6IV1qpwz2q2wTqgunBOLytYuiGYgEw8aQQ2efuwxESVEXsu8WltnSUgs9haT7BGAQ5TjAmbPYbHnwm4Mk6LJ+HXDkf1Oe9Ql9KdSu2H1pPG3p7d8Men94qQcAA2yWSY05+ffU742An4op7RJIlNKnxef7ykpLeSkuu5euX56YlGE6A7W1TLQGoFdaSieogBU8rCJStza3t05cEQtQKuxbOaSvM13b++eIbfPBMDrfo+G1BLai3Hzt1oB/l7mHN/WhFXOsz3nlf9Mmcs3wT5MKEq1--/HzZNlkEjUZvKWmu--L6jB9wXfmTcENo7wDpVOig==
PUT http://localhost:4000/api/wine_listings/6
Content-Type: application/json

{
    "brand": "test for successfully updating id: 6 without Authorization bearer secret key",
    "grape_variety": "test for successfully updating id: 6",
    "year": "2022",
    "category": "test for successfully updating id: 6",
    "country": "test for successfully updating id: 6",
    "region": "test for successfully updating id: 6",
    "description": "test for successfully updating id: 6"
}

### Currentlty testing
### Test Admin params performing updates to wine listing id: 2
### Test inlcudes jwt
PUT http://localhost:4000/api/wine_listings/2
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY1OTM0NzE0MCwiZXhwIjoxNjU5NDMzNTQwLCJqdGkiOiJmOTA3MDRmNS0zNTU2LTRkNTMtYTQ4Yi0zOTIwZTA5MTg1OTUifQ.ApqIL1iP5yc3CVFJ4nGB7gN9xnW_AFEydpbhx8cftao

{
    "brand": "test for successfully updating id:2, as an admin with correct params & JWT",
    "grape_variety": "test update id 2",
    "year": "2022",
    "category": "test update id 2",
    "country": "test update id 2",
    "region": "test update id 2",
    "description": "test update id 2"
}

### Successful testing of
### a fail attempt for regular user, who is logged in, performing an update of wine listings
### response = 204 No Content
PUT http://localhost:4000/api/wine_listings/4
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY1OTM0MjU3MywiZXhwIjoxNjU5NDI4OTczLCJqdGkiOiIxMTI4ZTI5My02NDE0LTRhZTctYTY2NC1jNWUxOTJhODM1YjAifQ.R5JhlDBx35rDxjll7ZzAp-3BvKeBLBwpVY5WMLMghhg

{
    "brand": "test for updating id: 4, with Auth bearer token as a regular user. This is expected to fail",
    "grape_variety": "test",
    "year": "2022",
    "category": "test",
    "country": "test",
    "region": "test",
    "description": "test"
}

### Currently testing
PUT http://localhost:4000/api/wine_listings/4
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY1OTM0MjU3MywiZXhwIjoxNjU5NDI4OTczLCJqdGkiOiIxMTI4ZTI5My02NDE0LTRhZTctYTY2NC1jNWUxOTJhODM1YjAifQ.R5JhlDBx35rDxjll7ZzAp-3BvKeBLBwpVY5WMLMghhg

{
    "brand": "test for updating id: 4, with Auth bearer token as a regular user",
    "grape_variety": "test",
    "year": "2022",
    "category": "test",
    "country": "test",
    "region": "test",
    "description": "test"
}


### Sucessfully delete wine_listings id: 7
### Currently able to delete without Authorization Bearer of secret key
### Response = 204 :no_content
DELETE http://localhost:4000/api/wine_listings/7
# Authorization: Bearer 

### Intentionally, Unsucessfully delete wine_listings id: 1000
### Response = 500 :internal_server_error
DELETE http://localhost:4000/api/wine_listings/1000

# --------------------------------------------------

### Access member data
### Pass 
GET http://localhost:4000/member-data
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNjU4NTYwMTU3LCJleHAiOjE2NTg1NjM3NTcsImp0aSI6IjkxNjRlNzY1LTAwMzktNDk2Ny1hZWI5LTJkYjc3OTgyOGI0NyJ9.MeM_CqfGUUuk8N1nKRowKbDEEcNBsMtfqWg_A4QBs9s

### THIS TEST IS NOT WORKING AS EXPECTED!!!
### Create user with only 2 params - email and password - Should FAIL
POST http://localhost:4000/api/sign_up
Content-Type: application/json

{  
    "user": {
        "email": "2params@test.com",
        "password": "password10"
    }
}

### Create user
### 4 Params given - username, email, password, password_confirmation
POST http://localhost:4000/api/sign_up
Content-Type: application/json

{  
    "user": {
        "username": "Username2",
        "email": "Username2@test.com",
        "password": "password",
        "password_confirmation": "password"
    }
}


### Login with correct details
### PASS with correct details
POST http://localhost:4000/api/login
Content-Type: application/json

{  
    "user": {
        "email": "testadmin@test.com",
        "password": "adminpw1"
    }
}

### LogOUT while logged in with a jwt auth token
### PASS with token from the login session
DELETE http://localhost:4000/api/logout
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY1OTM0MjU3MywiZXhwIjoxNjU5NDI4OTczLCJqdGkiOiIxMTI4ZTI5My02NDE0LTRhZTctYTY2NC1jNWUxOTJhODM1YjAifQ.R5JhlDBx35rDxjll7ZzAp-3BvKeBLBwpVY5WMLMghhg

### Test for current user is admin?
### This test might need to be ran with rspec



###Not yet tested

### Unsuccessfully login without JWT
### NOT PASSING!!!
POST http://localhost:4000/users/sign_in
Content-Type: application/json

{
    "email": "nga2@test.com",
    "password": "password2"
}

### CURRENTLY TESTING...

### ADMIN section

### Create Admin user
POST http://localhost:4000/api/sign_up
Content-Type: application/json

{  
    "user": {
        "email": "admin1@gmail.com",
        "password": "password1"
    }
}



### ----------------------------------------------
### CATEGORY NOT YET TESTED

### Get categories

GET http://localhost:4000/api/categories


### Gets all comments
### Passes with 200 response
GET http://localhost:4000/comments
Content-Type: application/json


### Create comment
### Passes with 201 created response
POST http://localhost:4000/comments
Content-Type: application/json

{  
    "comment": {
        "user_comment": "Test comment 1",
        "user_id": 1,
        "wine_listing_id": 1
    }
}